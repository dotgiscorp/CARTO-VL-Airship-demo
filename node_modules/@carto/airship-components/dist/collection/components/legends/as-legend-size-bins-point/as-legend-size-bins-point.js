import { borderStyleCounts } from '../../../utils/border-style-counts';
const FAKE_BORDER_SIZE = 1;
export class LegendSizeBinsPoint {
    constructor() {
        this.orientation = 'vertical';
        this.width = null;
    }
    render() {
        if (!this.data) {
            return null;
        }
        const classes = {
            'as-legend-size-bins-point--steps': true,
            [`as-legend-size-bins-point--${this.orientation}`]: true
        };
        this.maxSize = this.width || this.data.slice().sort((first, second) => second.width - first.width)[0].width;
        return h("div", { class: classes }, this.data.map((data) => this.renderStep(data)));
    }
    renderStep(data) {
        const strokeStyle = `${FAKE_BORDER_SIZE}px ${data.strokeStyle || 'solid'} ${data.strokeColor}`;
        const sizeOffset = borderStyleCounts(data.strokeStyle)
            ? FAKE_BORDER_SIZE * 2
            : 0;
        const SIZE = Math.round(data.width) + sizeOffset;
        const SIZE_PX = `${SIZE}px`;
        const MAX_SIZE = SIZE > this.maxSize ? SIZE : this.maxSize + sizeOffset;
        const MAX_SIZE_PX = `${MAX_SIZE}px`;
        const mask = this.getMask(data);
        const wrapperStyle = {};
        if (this.orientation === 'horizontal') {
            wrapperStyle.height = MAX_SIZE_PX;
        }
        else if (this.orientation === 'vertical') {
            wrapperStyle.width = MAX_SIZE_PX;
        }
        const style = Object.assign({ backgroundColor: data.color, border: strokeStyle, height: SIZE_PX, width: SIZE_PX }, mask);
        return (h("div", { class: 'as-legend-size-bins-point--step' },
            h("div", { style: wrapperStyle, class: 'as-legend-size-bins-point--circle-wrapper' },
                h("div", { class: 'as-legend-size-bins-point--circle', style: style })),
            h("span", { class: 'as-legend-size-bins-point--label' }, data.label)));
    }
    getMask(data) {
        if (!data.marker) {
            return {};
        }
        return {
            '-webkit-mask-image': `url(${data.marker})`,
            '-webkit-mask-position': 'center',
            '-webkit-mask-repeat': 'no-repeat',
            '-webkit-mask-size': `${data.width}px`,
            'maskImage': `url(${data.marker})`,
            'maskPosition': 'center',
            'maskRepeat': 'no-repeat',
            'maskSize': `${data.width}px`
        };
    }
    static get is() { return "as-legend-size-bins-point"; }
    static get properties() { return {
        "data": {
            "type": "Any",
            "attr": "data"
        },
        "orientation": {
            "type": String,
            "attr": "orientation"
        },
        "width": {
            "type": Number,
            "attr": "width"
        }
    }; }
    static get style() { return "/**style-placeholder:as-legend-size-bins-point:**/"; }
}
