{"ast":null,"code":"import * as tslib_1 from \"../polyfills/tslib.js\";\nimport { h } from \"../airship.core.js\";\nimport { a as readableNumber } from \"./chunk-6e6f6eb8.js\";\nimport { a as shadeOrBlend } from \"./chunk-b62f03fa.js\";\nimport { a as contentFragment } from \"./chunk-d27dd9c0.js\";\n\nvar OTHER_CATEGORY_COLOR = \"#747474\",\n    OTHER_CATEGORY_NAME = \"Other\",\n    CategoryWidget = function () {\n  function e() {\n    this.categories = [], this.disableInteractivity = !1, this.valueFormatter = this.defaultFormatter, this.showClearButton = !1, this.showHeader = !0, this.useTotalPercentage = !1, this.visibleCategories = 1 / 0, this.isLoading = !1, this.error = \"\", this.errorDescription = \"\", this.noDataHeaderMessage = \"NO DATA AVAILABLE\", this.noDataBodyMessage = \"There is no data to display.\", this.selectedCategories = [];\n  }\n\n  return e.prototype.defaultFormatter = function (e) {\n    return \"\" + readableNumber(e);\n  }, e.prototype.getSelectedCategories = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (e) {\n        return [2, this.selectedCategories];\n      });\n    });\n  }, e.prototype.clearSelection = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (e) {\n        return this.selectedCategories.length ? (this.selectedCategories = [], this._onCategoriesChanged(), [2]) : [2];\n      });\n    });\n  }, e.prototype.render = function () {\n    return [this._renderHeader(), this._renderSelection(), this._renderContent()];\n  }, e.prototype._renderSelection = function () {\n    var e = this;\n    if (this.isLoading || this._isEmpty() || this.error || !this.showClearButton) return \"\";\n    var t = this.selectedCategories.length;\n    return h(\"as-widget-selection\", {\n      selection: (t || \"All\") + \" selected\",\n      clearText: \"Clear selection\",\n      showClear: t > 0,\n      onClear: function () {\n        return e.clearSelection();\n      }\n    });\n  }, e.prototype._renderHeader = function () {\n    if (this.showHeader) return h(\"as-widget-header\", {\n      header: this.heading,\n      subheader: this.description,\n      \"is-empty\": this._isEmpty(),\n      \"is-loading\": this.isLoading,\n      error: this.error,\n      \"no-data-message\": this.noDataHeaderMessage\n    });\n  }, e.prototype._renderContent = function () {\n    return contentFragment(this.isLoading, this.error, this._isEmpty(), this.heading, this.errorDescription, this.noDataBodyMessage, this._renderCategoryList());\n  }, e.prototype._renderCategoryList = function () {\n    return h(\"ul\", {\n      class: {\n        \"as-category-widget__list\": !0,\n        \"as-category-widget__list--disabled\": this.disableInteractivity\n      }\n    }, this._renderCategories());\n  }, e.prototype._renderCategories = function () {\n    var e,\n        t = this,\n        r = this.categories.length > this.visibleCategories,\n        i = this._parseCategories(),\n        a = i.categories,\n        o = i.otherCategory,\n        s = a.slice(0, this.visibleCategories),\n        n = this.useTotalPercentage ? this._getCategoriesTotalValue(this.categories) : this._getCategoriesMaximumValue(a, Boolean(o));\n\n    return (o || r) && (e = this._renderOtherCategory(o, {\n      maximumValue: n\n    })), [s.map(function (e) {\n      return t._renderCategory(e, {\n        maximumValue: n\n      });\n    }), e];\n  }, e.prototype._renderCategory = function (e, t) {\n    var r = this,\n        i = t.isOther,\n        a = t.maximumValue,\n        o = this._isSelected(e.name),\n        s = this.selectedCategories.length > 0,\n        n = {\n      backgroundColor: this._getBarColor(e.color, {\n        isSelected: o,\n        isOther: i\n      }) || \"var(--as--category-bar--color)\",\n      width: e.value / a * 100 + \"%\"\n    },\n        g = {\n      \"as-category-widget__category\": !0,\n      \"as-category-widget__category--not-selected\": s && (!o || i),\n      \"as-category-widget__category--other\": i,\n      \"as-category-widget__category--selected\": o\n    },\n        c = this.valueFormatter(e.value);\n\n    return h(\"li\", {\n      class: g,\n      onClick: function () {\n        return r._toggleCategory(e);\n      }\n    }, h(\"p\", {\n      class: \"as-category-widget__info as-body\"\n    }, h(\"div\", {\n      class: \"as-category-widget__title\"\n    }, e.name), c), h(\"div\", {\n      class: \"as-category-widget__bar\"\n    }, h(\"div\", {\n      class: \"as-category-widget__bar-value\",\n      style: n\n    })));\n  }, e.prototype._renderOtherCategory = function (e, t) {\n    var r = e || {\n      name: \"Other\",\n      value: this._getCategoriesTotalValue(this.categories.slice(this.visibleCategories, this.categories.length))\n    };\n    return this._renderCategory(r, {\n      maximumValue: t.maximumValue,\n      isOther: !0\n    });\n  }, e.prototype._isSelected = function (e) {\n    return this.selectedCategories.includes(e);\n  }, e.prototype._toggleCategory = function (e) {\n    this.disableInteractivity || (this.selectedCategories = this._isSelected(e.name) ? this.selectedCategories.filter(function (t) {\n      return t !== e.name;\n    }) : this.selectedCategories.concat([e.name]), this._onCategoriesChanged());\n  }, e.prototype._onCategoriesChanged = function () {\n    this.categoriesSelected.emit(this.selectedCategories);\n  }, e.prototype._getCategoriesMaximumValue = function (e, t) {\n    return void 0 === t && (t = !1), this._getVisibleCategories(e, t).reduce(function (e, t) {\n      return t.value > e ? t.value : e;\n    }, 0);\n  }, e.prototype._getCategoriesTotalValue = function (e) {\n    return e.reduce(function (e, t) {\n      return t.value + e;\n    }, 0);\n  }, e.prototype._getBarColor = function (e, t) {\n    return void 0 === t && (t = {}), t.isOther ? OTHER_CATEGORY_COLOR : t.isSelected ? shadeOrBlend(-.16, e) : e;\n  }, e.prototype._parseCategories = function () {\n    var e = this.categories.find(function (e) {\n      return e.name === OTHER_CATEGORY_NAME;\n    });\n    return e ? {\n      categories: this.categories.filter(function (t) {\n        return t.name !== e.name;\n      }),\n      otherCategory: e\n    } : {\n      categories: this.categories\n    };\n  }, e.prototype._getVisibleCategories = function (e, t) {\n    return t ? e : e.slice(0, this.visibleCategories);\n  }, e.prototype._isEmpty = function () {\n    return !this.categories || !this.categories.length;\n  }, Object.defineProperty(e, \"is\", {\n    get: function () {\n      return \"as-category-widget\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e, \"properties\", {\n    get: function () {\n      return {\n        categories: {\n          type: \"Any\",\n          attr: \"categories\"\n        },\n        clearSelection: {\n          method: !0\n        },\n        defaultBarColor: {\n          type: String,\n          attr: \"default-bar-color\"\n        },\n        description: {\n          type: String,\n          attr: \"description\"\n        },\n        disableInteractivity: {\n          type: Boolean,\n          attr: \"disable-interactivity\"\n        },\n        error: {\n          type: String,\n          attr: \"error\"\n        },\n        errorDescription: {\n          type: String,\n          attr: \"error-description\"\n        },\n        getSelectedCategories: {\n          method: !0\n        },\n        heading: {\n          type: String,\n          attr: \"heading\"\n        },\n        isLoading: {\n          type: Boolean,\n          attr: \"is-loading\"\n        },\n        noDataBodyMessage: {\n          type: String,\n          attr: \"no-data-body-message\"\n        },\n        noDataHeaderMessage: {\n          type: String,\n          attr: \"no-data-header-message\"\n        },\n        selectedCategories: {\n          state: !0\n        },\n        showClearButton: {\n          type: Boolean,\n          attr: \"show-clear-button\"\n        },\n        showHeader: {\n          type: Boolean,\n          attr: \"show-header\"\n        },\n        useTotalPercentage: {\n          type: Boolean,\n          attr: \"use-total-percentage\"\n        },\n        valueFormatter: {\n          type: \"Any\",\n          attr: \"value-formatter\"\n        },\n        visibleCategories: {\n          type: Number,\n          attr: \"visible-categories\"\n        }\n      };\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e, \"events\", {\n    get: function () {\n      return [{\n        name: \"categoriesSelected\",\n        method: \"categoriesSelected\",\n        bubbles: !0,\n        cancelable: !0,\n        composed: !0\n      }];\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e, \"style\", {\n    get: function () {\n      return \"as-category-widget{--as--category-bar--background-color:var(--as--color--ui-02,#f5f5f5);--as--category-bar--color:var(--as--color--complementary,#47db99);--as--category-widget--background-color:var(--as--color--ui-01,#fff);--as--category-widget--bar--height:4px;--as--category-widget--description--color:var(--as--color--type-02,#747474);display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:228px;height:100%;overflow-y:auto;background:var(--as--category-widget--background-color)}as-category-widget .content{min-height:100px}as-category-widget .as-category-widget__count{color:var(--as--category-widget--description--color)}as-category-widget .as-category-widget__list{-ms-flex:1;flex:1;margin:0;padding:0;overflow-y:auto;list-style:none}as-category-widget .as-category-widget__list.as-category-widget__list--disabled li{pointer-events:none}as-category-widget .as-category-widget__footer{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}as-category-widget .as-category-widget__list+.as-category-widget__footer{margin-top:16px}as-category-widget .as-category-widget__info{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}as-category-widget .as-category-widget__title{-ms-flex:1;flex:1;width:100%;padding-right:8px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}as-category-widget .as-category-widget__bar{position:relative;width:100%;height:var(--as--category-widget--bar--height);border-radius:2px;background-color:var(--as--category-bar--background-color)}as-category-widget .as-category-widget__bar-value{position:absolute;left:0;max-width:100%;height:var(--as--category-widget--bar--height);-webkit-transition:background .2s ease,opacity .5s ease;transition:background .2s ease,opacity .5s ease;border-radius:2px}as-category-widget .as-category-widget__category{margin-bottom:8px;cursor:pointer}as-category-widget .as-category-widget__category--other{pointer-events:none}as-category-widget .as-category-widget__category--not-selected{opacity:.5}as-category-widget .as-category-widget__category:not(.as-category-widget__category--selected):hover .as-category-widget__bar-value{opacity:.6}\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), e;\n}();\n\nexport { CategoryWidget as AsCategoryWidget };","map":null,"metadata":{},"sourceType":"module"}