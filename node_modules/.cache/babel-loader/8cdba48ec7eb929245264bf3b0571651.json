{"ast":null,"code":"export function applyPolyfill(window, document) {\n  /*!\n  Object.assign\n  */\n  \"function\" != typeof Object.assign && Object.defineProperty(Object, \"assign\", {\n    value: function (d, f) {\n      if (null == d) throw new TypeError(\"Cannot convert undefined or null to object\");\n\n      for (var e = Object(d), b = 1; b < arguments.length; b++) {\n        var a = arguments[b];\n        if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (e[c] = a[c]);\n      }\n\n      return e;\n    },\n    writable: !0,\n    configurable: !0\n  });\n  /*!\n  Object.entries\n  */\n\n  Object.entries || (Object.entries = function (c) {\n    for (var b = Object.keys(c), a = b.length, d = Array(a); a--;) d[a] = [b[a], c[b[a]]];\n\n    return d;\n  });\n  /*!\n  Object.values\n  */\n\n  Object.values || (Object.values = function (n) {\n    return Object.keys(n).map(function (r) {\n      return n[r];\n    });\n  });\n  /*!\n  Number\n  */\n\n  void 0 === Number.isFinite && (Number.isFinite = function (a) {\n    return \"number\" === typeof a && isFinite(a);\n  });\n\n  Number.isNaN = Number.isNaN || function (a) {\n    return a !== a;\n  };\n\n  Number.isInteger = Number.isInteger || function (a) {\n    return \"number\" === typeof a && isFinite(a) && Math.floor(a) === a;\n  };\n}","map":null,"metadata":{},"sourceType":"module"}