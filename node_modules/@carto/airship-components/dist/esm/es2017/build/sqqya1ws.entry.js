import { h } from '../airship.core.js';

class LegendSizeBins {
    constructor() {
        this.orientation = 'vertical';
        this.width = null;
    }
    render() {
        if (!this.data || this.data.length === 0) {
            return null;
        }
        return this.renderLegend(this.data);
    }
    renderLegend(data) {
        switch (data[0].type) {
            case 'point':
                return h("as-legend-size-bins-point", { data: this.data, orientation: this.orientation, width: this.width });
            case 'line':
                return h("as-legend-size-bins-line", { data: this.data, orientation: this.orientation, width: this.width });
            default:
                return null;
        }
    }
    static get is() { return "as-legend-size-bins"; }
    static get properties() { return {
        "data": {
            "type": "Any",
            "attr": "data"
        },
        "orientation": {
            "type": String,
            "attr": "orientation"
        },
        "width": {
            "type": Number,
            "attr": "width"
        }
    }; }
    static get style() { return "as-legend-size-bins{display:block}"; }
}

class LegendSizeBinsLine {
    constructor() {
        this.orientation = 'vertical';
        this.width = null;
    }
    render() {
        if (!this.data) {
            return null;
        }
        const outerClasses = {
            'as-legend-size-bins-line--outer-wrapper': true,
            [`as-legend-size-bins-line--${this.orientation}`]: true
        };
        const wrapperStyle = {
            width: this.width !== null && this.orientation === 'vertical' ? `${this.width}px` : null
        };
        return h("div", { class: outerClasses },
            h("div", { style: wrapperStyle, class: 'as-legend-size-bins-line--wrapper as-legend-size-bins-line--color' }, this.data.map((d) => this.renderStep(d))),
            h("div", { class: 'as-legend-size-bins-line--wrapper as-legend-size-bins-line--labels' }, this.data.map(this.renderLabels)));
    }
    renderStep(data) {
        const prop = this.orientation === 'vertical' ? 'width' : 'height';
        const style = {
            background: data.color,
            [prop]: `${data.width}px`
        };
        return (h("div", { class: 'as-legend-size-bins-line--step', style: style }));
    }
    renderLabels(data) {
        return (h("div", { class: 'as-legend-size-bins-line--label' },
            h("span", null, data.label)));
    }
    static get is() { return "as-legend-size-bins-line"; }
    static get properties() { return {
        "data": {
            "type": "Any",
            "attr": "data"
        },
        "orientation": {
            "type": String,
            "attr": "orientation"
        },
        "width": {
            "type": Number,
            "attr": "width"
        }
    }; }
    static get style() { return "as-legend-size-bins-line{--as-legend-size-bins-line--border-color:rgba(0,0,0,0.1);--as-legend-size-bins-line--color:var(--as--color--type-01);display:block}as-legend-size-bins-line .as-legend-size-bins-line--outer-wrapper{display:-ms-flexbox;display:flex}as-legend-size-bins-line .as-legend-size-bins-line--outer-wrapper.as-legend-size-bins-line--vertical{-ms-flex-direction:row;flex-direction:row}as-legend-size-bins-line .as-legend-size-bins-line--outer-wrapper.as-legend-size-bins-line--horizontal{-ms-flex-direction:column;flex-direction:column}as-legend-size-bins-line .as-legend-size-bins-line--wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}as-legend-size-bins-line .as-legend-size-bins-line--labels{-ms-flex-align:start;align-items:flex-start}as-legend-size-bins-line .as-legend-size-bins-line--horizontal .as-legend-size-bins-line--wrapper{min-width:300px}as-legend-size-bins-line .as-legend-size-bins-line--horizontal .as-legend-size-bins-line--labels{margin-top:8px}as-legend-size-bins-line .as-legend-size-bins-line--label{-ms-flex:1;flex:1;color:var(--as-legend-size-bins-line--color);font:var(--as--font--caption);text-align:center;text-transform:capitalize;white-space:nowrap}as-legend-size-bins-line .as-legend-size-bins-line--vertical .as-legend-size-bins-line--wrapper{-ms-flex-direction:column;flex-direction:column;min-height:300px}as-legend-size-bins-line .as-legend-size-bins-line--vertical .as-legend-size-bins-line--label{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center}as-legend-size-bins-line .as-legend-size-bins-line--vertical .as-legend-size-bins-line--labels{margin-left:8px}as-legend-size-bins-line .as-legend-size-bins-line--step{-ms-flex:1;flex:1;border:1px solid var(--as-legend-size-bins-line--border-color);-webkit-box-shadow:-1px 0 2px 0 var(--as-legend-size-bins-line--border-color);box-shadow:-1px 0 2px 0 var(--as-legend-size-bins-line--border-color)}as-legend-size-bins-line .as-legend-size-bins-line--horizontal .as-legend-size-bins-line--step{height:8px}as-legend-size-bins-line .as-legend-size-bins-line--vertical .as-legend-size-bins-line--step{width:8px}"; }
}

export { LegendSizeBins as AsLegendSizeBins, LegendSizeBinsLine as AsLegendSizeBinsLine };
