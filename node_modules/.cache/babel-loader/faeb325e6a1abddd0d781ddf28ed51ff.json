{"ast":null,"code":"import { h } from \"../airship.core.js\";\nimport { a as borderStyleCounts } from \"./chunk-512e386e.js\";\n\nvar LegendSizeContinuous = function () {\n  function t() {\n    this.orientation = \"vertical\", this.scale = 1;\n  }\n\n  return t.prototype.render = function () {\n    return this.data && 0 !== this.data.length ? h(\"div\", {\n      class: {\n        \"as-legend-size-continuous--overflow\": \"line\" === this.data[0].type\n      }\n    }, this.renderLegend(this.data)) : null;\n  }, t.prototype.renderLegend = function (t) {\n    switch (t[0].type) {\n      case \"point\":\n        return h(\"as-legend-size-continuous-point\", {\n          data: this.data,\n          orientation: this.orientation,\n          scale: this.scale\n        });\n\n      case \"line\":\n        return h(\"as-legend-size-continuous-line\", {\n          data: this.data,\n          orientation: this.orientation\n        });\n\n      default:\n        return null;\n    }\n  }, Object.defineProperty(t, \"is\", {\n    get: function () {\n      return \"as-legend-size-continuous\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(t, \"properties\", {\n    get: function () {\n      return {\n        data: {\n          type: \"Any\",\n          attr: \"data\"\n        },\n        orientation: {\n          type: String,\n          attr: \"orientation\"\n        },\n        scale: {\n          type: Number,\n          attr: \"scale\"\n        }\n      };\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(t, \"style\", {\n    get: function () {\n      return \"as-legend-size-continuous{display:block}as-legend-size-continuous .as-legend-size-continuous--overflow{overflow:hidden}\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), t;\n}(),\n    TEXT_MARGIN = 4,\n    MIN_LINE_SIZE = 4,\n    LegendSizeContinuousLine = function () {\n  function t() {\n    this.data = null, this.orientation = \"vertical\", this.size = 300, this.leadingLineStrokeWidth = .5, this.textLineHeight = 12, this.xMarginFactor = .1, this.yMarginFactor = .1, this.width = null, this.rSize = 0;\n  }\n\n  return t.prototype.componentWillUpdate = function () {\n    this.parseSize();\n  }, t.prototype.componentWillLoad = function () {\n    this.parseSize();\n  }, t.prototype.render = function () {\n    var t,\n        e = this;\n\n    if (this.data && 0 !== this.data.length) {\n      var i = this.getSortedData(),\n          n = i[0].width,\n          r = n / 2,\n          o = Math.max(n + MIN_LINE_SIZE, this.width),\n          a = \"horizontal\" === this.orientation || null === this.width ? 0 : (this.width - n) / 2,\n          s = [],\n          l = [];\n      i.forEach(function (t, h) {\n        var u = r * (t.width / n),\n            c = h / (i.length - 1),\n            d = r + u,\n            p = r - u,\n            g = e.size - e.size * c,\n            y = \"vertical\" === e.orientation ? [p + a, g] : [g + a, p];\n\n        if (s.splice(h, 0, \"L\" + (\"vertical\" === e.orientation ? [d + a, g] : [g + a, d]).join(\" \")), s.splice(s.length - h, 0, \"L\" + y.join(\" \")), t.label) {\n          var f = e.getOffset(h, i.length - 1),\n              z = e.size - e.size * c + f,\n              S = [r + u, z],\n              b = [o, z];\n          \"horizontal\" === e.orientation && (S.reverse(), b.reverse()), S[0] += a, b[0] += a, l.push({\n            label: t.label,\n            x1: S[0],\n            x2: b[0],\n            y1: S[1],\n            y2: b[1]\n          });\n        }\n      }), s.splice(0, 0, \"horizontal\" === this.orientation ? \"M\" + this.size + \" 0\" : \"M0 \" + this.size);\n      var u = ((t = {})[\"as-legend-size-continuous-line--\" + this.orientation] = !0, t);\n      return h(\"svg\", {\n        class: u,\n        style: this.getSVGStyle(),\n        viewBox: this.getSVGViewBox()\n      }, h(\"g\", null, h(\"path\", {\n        style: this.getPathStyle(),\n        d: s.join(\" \") + \" Z\"\n      }), h(\"g\", null, l.map(function (t) {\n        var i = -a;\n        return \"horizontal\" === e.orientation && (i = 0), h(\"line\", {\n          \"stroke-width\": e.leadingLineStrokeWidth,\n          x1: t.x1,\n          y1: t.y1,\n          x2: t.x2 + i,\n          y2: t.y2\n        });\n      })), h(\"g\", null, l.map(function (t) {\n        var i = t.label,\n            n = t.x2,\n            r = t.y2,\n            o = {\n          x: TEXT_MARGIN - a,\n          y: e.textLineHeight / 4\n        };\n        return \"horizontal\" === e.orientation && (o.x = 0, o.y = e.textLineHeight), [h(\"text\", {\n          x: n + o.x,\n          y: r + o.y\n        }, i)];\n      }))));\n    }\n  }, t.prototype.parseSize = function () {\n    if (this.data && 0 !== this.data.length) {\n      var t = this.getSortedData();\n      this.rSize = Math.max(t[0].width + MIN_LINE_SIZE + this.textLineHeight, 0);\n    }\n  }, t.prototype.getSortedData = function () {\n    return null === this.data ? this.data : this.data.slice().sort(function (t, e) {\n      return e.width - t.width;\n    });\n  }, t.prototype.getPathStyle = function () {\n    return {\n      fill: \"\" + this.data[0].color\n    };\n  }, t.prototype.getSVGStyle = function () {\n    return {\n      height: (\"horizontal\" === this.orientation ? this.rSize : this.size) * (1 + this.yMarginFactor) + \"px\",\n      width: this.size * (1 + this.xMarginFactor) + \"px\"\n    };\n  }, t.prototype.getSVGViewBox = function () {\n    var t = \"horizontal\" === this.orientation ? this.rSize : this.size,\n        e = this.size * (-this.xMarginFactor / 2);\n    return \"vertical\" === this.orientation && (e = 0), e + \" \" + t * (-this.yMarginFactor / 2) + \" \" + this.size * (1 + this.xMarginFactor) + \" \" + t * (1 + this.yMarginFactor);\n  }, t.prototype.getOffset = function (t, e) {\n    var i = 0;\n    return t === e && (i += this.leadingLineStrokeWidth), 0 === t && (i -= this.leadingLineStrokeWidth), i;\n  }, Object.defineProperty(t, \"is\", {\n    get: function () {\n      return \"as-legend-size-continuous-line\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(t, \"properties\", {\n    get: function () {\n      return {\n        data: {\n          type: \"Any\",\n          attr: \"data\"\n        },\n        leadingLineStrokeWidth: {\n          type: Number,\n          attr: \"leading-line-stroke-width\"\n        },\n        orientation: {\n          type: String,\n          attr: \"orientation\"\n        },\n        rSize: {\n          state: !0\n        },\n        size: {\n          type: Number,\n          attr: \"size\"\n        },\n        textLineHeight: {\n          type: Number,\n          attr: \"text-line-height\"\n        },\n        width: {\n          type: Number,\n          attr: \"width\"\n        },\n        xMarginFactor: {\n          type: Number,\n          attr: \"x-margin-factor\"\n        },\n        yMarginFactor: {\n          type: Number,\n          attr: \"y-margin-factor\"\n        }\n      };\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(t, \"style\", {\n    get: function () {\n      return \"as-legend-size-continuous-line{display:block;overflow:hidden}as-legend-size-continuous-line svg text{font:var(--as--font--caption)}as-legend-size-continuous-line svg line{stroke:var(--as-legend--color)}as-legend-size-continuous-line svg.as-legend-size-continuous-line--horizontal text{text-anchor:middle}\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), t;\n}(),\n    FAKE_BORDER_SIZE = 1,\n    LegendSizeContinuousPoint = function () {\n  function t() {\n    this.orientation = \"vertical\", this.scale = 1;\n  }\n\n  return t.prototype.render = function () {\n    var t,\n        e = this;\n    if (!this.data) return null;\n    var i = ((t = {\n      \"as-legend-size-continuous-point--wrapper\": !0\n    })[\"as-legend-size-continuous-point--\" + this.orientation] = !0, t),\n        n = this.data.slice().sort(function (t, e) {\n      return e.width - t.width;\n    });\n    this.maxSize = n[0].width * this.scale;\n    var r = {\n      height: this.maxSize + \"px\",\n      width: this.maxSize + \"px\"\n    };\n    return h(\"div\", {\n      class: i\n    }, h(\"span\", {\n      class: \"as-legend-size-continuous-point--label\"\n    }, n[n.length - 1].label), h(\"div\", {\n      style: r,\n      class: \"as-legend-size-continuous-point--steps\"\n    }, n.map(function (t) {\n      return e.renderStep(t);\n    })), h(\"span\", {\n      class: \"as-legend-size-continuous-point--label\"\n    }, n[0].label));\n  }, t.prototype.renderStep = function (t) {\n    var e = FAKE_BORDER_SIZE + \"px \" + (t.strokeStyle || \"solid\") + \" \" + t.strokeColor,\n        i = borderStyleCounts(t.strokeStyle) ? 2 * FAKE_BORDER_SIZE : 0,\n        n = Math.round((t.width + i) * this.scale) + \"px\";\n    return h(\"div\", {\n      class: \"as-legend-size-continuous-point--circle\",\n      style: {\n        backgroundColor: t.color,\n        border: e,\n        height: n,\n        width: n\n      }\n    });\n  }, Object.defineProperty(t, \"is\", {\n    get: function () {\n      return \"as-legend-size-continuous-point\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(t, \"properties\", {\n    get: function () {\n      return {\n        data: {\n          type: \"Any\",\n          attr: \"data\"\n        },\n        orientation: {\n          type: String,\n          attr: \"orientation\"\n        },\n        scale: {\n          type: Number,\n          attr: \"scale\"\n        }\n      };\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(t, \"style\", {\n    get: function () {\n      return \"as-legend-size-continuous-point{--as-legend-size-continuous-point--color:var(--as--color--type-01);--as-legend-size-continuous-point--shadow:rgba(0,0,0,0.1);display:block}as-legend-size-continuous-point .as-legend-size-continuous-point--steps{position:relative;margin:8px}as-legend-size-continuous-point .as-legend-size-continuous-point--steps,as-legend-size-continuous-point .as-legend-size-continuous-point--wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}as-legend-size-continuous-point .as-legend-size-continuous-point--circle{position:absolute;border:2px solid var(--as-legend-size-continuous-point--shadow);border-radius:50%;-webkit-box-shadow:0 0 2px 0 var(--as-legend-size-continuous-point--shadow);box-shadow:0 0 2px 0 var(--as-legend-size-continuous-point--shadow)}as-legend-size-continuous-point .as-legend-size-continuous-point--label{color:var(--as-legend-size-continuous-point--color);font:var(--as--font--caption);text-transform:capitalize;white-space:nowrap}as-legend-size-continuous-point .as-legend-size-continuous-point--vertical .as-legend-size-continuous-point--steps,as-legend-size-continuous-point .as-legend-size-continuous-point--vertical.as-legend-size-continuous-point--wrapper{-ms-flex-direction:column-reverse;flex-direction:column-reverse}\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), t;\n}();\n\nexport { LegendSizeContinuous as AsLegendSizeContinuous, LegendSizeContinuousLine as AsLegendSizeContinuousLine, LegendSizeContinuousPoint as AsLegendSizeContinuousPoint };","map":null,"metadata":{},"sourceType":"module"}