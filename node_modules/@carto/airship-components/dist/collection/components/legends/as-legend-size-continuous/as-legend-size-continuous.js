export class LegendSizeContinuous {
    constructor() {
        this.orientation = 'vertical';
        this.scale = 1;
    }
    render() {
        if (!this.data || this.data.length === 0) {
            return null;
        }
        const classes = {
            'as-legend-size-continuous--overflow': this.data[0].type === 'line'
        };
        return h("div", { class: classes }, this.renderLegend(this.data));
    }
    renderLegend(data) {
        switch (data[0].type) {
            case 'point':
                return h("as-legend-size-continuous-point", { data: this.data, orientation: this.orientation, scale: this.scale });
            case 'line':
                return h("as-legend-size-continuous-line", { data: this.data, orientation: this.orientation });
            default:
                return null;
        }
    }
    static get is() { return "as-legend-size-continuous"; }
    static get properties() { return {
        "data": {
            "type": "Any",
            "attr": "data"
        },
        "orientation": {
            "type": String,
            "attr": "orientation"
        },
        "scale": {
            "type": Number,
            "attr": "scale"
        }
    }; }
    static get style() { return "/**style-placeholder:as-legend-size-continuous:**/"; }
}
