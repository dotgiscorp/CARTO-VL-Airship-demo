{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport carto from '@carto/carto-vl';\nconst LAYER_CONFIG = {\n  QUERY: 'SELECT cartodb_id, the_geom_webmercator, description FROM alcoy',\n  USERNAME: 'dotgis',\n  API_KEY: 'default_public'\n};\n\nclass Layer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this._addLayer = () => {\n      const map = this.props.map;\n      const source = new carto.source.SQL(LAYER_CONFIG.QUERY, {\n        username: LAYER_CONFIG.USERNAME,\n        apiKey: LAYER_CONFIG.API_KEY\n      });\n      const viz = new carto.Viz(\"\\n      @v_histogram: viewportHistogram($description, [[1, 2], [2, 3], [3, 4], [4, 5]])\\n      color: opacity(ramp($description, BOLD), .6)\\n      strokeColor: rgb(0, 255, 153)\\n      width: 75 * animation($description, 5, fade(1, 2))\\n      strokeWidth: 2\\n    \");\n      const layer = new carto.Layer('test-layer', source, viz);\n\n      try {\n        layer.addTo(map, 'waterway-label');\n      } catch (err) {\n        throw new Error(\"Could not render the layer: \".concat(err));\n      }\n\n      ;\n      layer.on('updated', () => {\n        const histogram = layer.viz.variables.v_histogram;\n        const histogramData = histogram.value;\n        this.props.onViewportHistogram(histogramData);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this._addLayer();\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nLayer.propTypes = {\n  map: PropTypes.any.isRequired\n};\nexport default Layer;","map":{"version":3,"sources":["/home/adri/Desktop/demo_CARTOVL/CARTO-VL-Airship-demo/src/components/Layer/index.jsx"],"names":["React","PropTypes","carto","LAYER_CONFIG","QUERY","USERNAME","API_KEY","Layer","Component","_addLayer","map","props","source","SQL","username","apiKey","viz","Viz","layer","addTo","err","Error","on","histogram","variables","v_histogram","histogramData","value","onViewportHistogram","componentDidMount","render","propTypes","any","isRequired"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,iEADY;AAEnBC,EAAAA,QAAQ,EAAE,QAFS;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;;AAMA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAUlCC,SAVkC,GAUtB,MAAM;AAAA,YACRC,GADQ,GACA,KAAKC,KADL,CACRD,GADQ;AAGhB,YAAME,MAAM,GAAG,IAAIV,KAAK,CAACU,MAAN,CAAaC,GAAjB,CAAqBV,YAAY,CAACC,KAAlC,EAAyC;AACtDU,QAAAA,QAAQ,EAAEX,YAAY,CAACE,QAD+B;AAEtDU,QAAAA,MAAM,EAAEZ,YAAY,CAACG;AAFiC,OAAzC,CAAf;AAKA,YAAMU,GAAG,GAAG,IAAId,KAAK,CAACe,GAAV,0QAAZ;AAQA,YAAMC,KAAK,GAAG,IAAIhB,KAAK,CAACK,KAAV,CAAgB,YAAhB,EAA8BK,MAA9B,EAAsCI,GAAtC,CAAd;;AAEA,UAAI;AACFE,QAAAA,KAAK,CAACC,KAAN,CAAYT,GAAZ,EAAiB,gBAAjB;AACD,OAFD,CAEE,OAAMU,GAAN,EAAW;AACX,cAAM,IAAIC,KAAJ,uCAA0CD,GAA1C,EAAN;AACD;;AAAA;AAEDF,MAAAA,KAAK,CAACI,EAAN,CAAS,SAAT,EAAoB,MAAM;AACxB,cAAMC,SAAS,GAAGL,KAAK,CAACF,GAAN,CAAUQ,SAAV,CAAoBC,WAAtC;AACA,cAAMC,aAAa,GAAGH,SAAS,CAACI,KAAhC;AACA,aAAKhB,KAAL,CAAWiB,mBAAX,CAA+BF,aAA/B;AACD,OAJD;AAKD,KAvCiC;AAAA;;AAMlCG,EAAAA,iBAAiB,GAAG;AAChB,SAAKpB,SAAL;AACH;;AAiCDqB,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;;AA3CiC;;AAA9BvB,K,CAEGwB,S,GAAY;AACjBrB,EAAAA,GAAG,EAAET,SAAS,CAAC+B,GAAV,CAAcC;AADF,C;AA4CrB,eAAe1B,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport carto from '@carto/carto-vl';\n\nconst LAYER_CONFIG = {\n  QUERY: 'SELECT cartodb_id, the_geom_webmercator, description FROM alcoy',\n  USERNAME: 'dotgis',\n  API_KEY: 'default_public'\n} \n\nclass Layer extends React.Component {\n\n  static propTypes = {\n    map: PropTypes.any.isRequired\n  };\n\n  componentDidMount() {\n      this._addLayer();\n  }\n\n  _addLayer = () => {\n    const { map } = this.props;\n\n    const source = new carto.source.SQL(LAYER_CONFIG.QUERY, {\n      username: LAYER_CONFIG.USERNAME,\n      apiKey: LAYER_CONFIG.API_KEY\n    });\n\n    const viz = new carto.Viz(`\n      @v_histogram: viewportHistogram($description, [[1, 2], [2, 3], [3, 4], [4, 5]])\n      color: opacity(ramp($description, BOLD), .6)\n      strokeColor: rgb(0, 255, 153)\n      width: 75 * animation($description, 5, fade(1, 2))\n      strokeWidth: 2\n    `);\n\n    const layer = new carto.Layer('test-layer', source, viz);\n\n    try {\n      layer.addTo(map, 'waterway-label');\n    } catch(err) {\n      throw new Error (`Could not render the layer: ${err}`)\n    };\n\n    layer.on('updated', () => {\n      const histogram = layer.viz.variables.v_histogram;\n      const histogramData = histogram.value;\n      this.props.onViewportHistogram(histogramData);\n    });\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default Layer;"]},"metadata":{},"sourceType":"module"}