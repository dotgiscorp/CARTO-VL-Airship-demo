{"ast":null,"code":"export function applyPolyfill(window, document) {\n  /*!\n  Array.prototype.fill\n  */\n  Array.prototype.fill || Object.defineProperty(Array.prototype, \"fill\", {\n    value: function (t) {\n      var r, e, i, n, o, a, l;\n      if (null == this) throw new TypeError(\"this is null or not defined\");\n\n      for (e = (r = Object(this)).length >>> 0, n = (i = arguments[1] >> 0) < 0 ? Math.max(e + i, 0) : Math.min(i, e), l = (a = void 0 === (o = arguments[2]) ? e : o >> 0) < 0 ? Math.max(e + a, 0) : Math.min(a, e); n < l;) r[n] = t, n++;\n\n      return r;\n    }\n  });\n  /*!\n  Array.prototype.find\n  */\n\n  Array.prototype.find || Object.defineProperty(Array.prototype, \"find\", {\n    writable: !0,\n    configurable: !0,\n    value: function (c, e) {\n      if (null == this) throw new TypeError('\"this\" is null or not defined');\n      var b = Object(this),\n          f = b.length >>> 0;\n      if (\"function\" !== typeof c) throw new TypeError(\"predicate must be a function\");\n\n      for (var a = 0; a < f;) {\n        var d = b[a];\n        if (c.call(e, d, a, b)) return d;\n        a++;\n      }\n    }\n  });\n  /*!\n  Array.prototype.findIndex\n  */\n\n  Array.prototype.findIndex || Object.defineProperty(Array.prototype, \"findIndex\", {\n    value: function (c, d) {\n      if (null == this) throw new TypeError('\"this\" is null or not defined');\n      var b = Object(this),\n          e = b.length >>> 0;\n      if (\"function\" !== typeof c) throw new TypeError(\"predicate must be a function\");\n\n      for (var a = 0; a < e;) {\n        if (c.call(d, b[a], a, b)) return a;\n        a++;\n      }\n\n      return -1;\n    },\n    configurable: !0,\n    writable: !0\n  });\n  /*!\n  Array.from\n  */\n\n  Array.from || (Array.from = function () {\n    var l = Object.prototype.toString,\n        h = function (c) {\n      return \"function\" === typeof c || \"[object Function]\" === l.call(c);\n    },\n        m = Math.pow(2, 53) - 1;\n\n    return function (c) {\n      var k = Object(c);\n      if (null == c) throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");\n      var d = 1 < arguments.length ? arguments[1] : void 0,\n          f;\n\n      if (\"undefined\" !== typeof d) {\n        if (!h(d)) throw new TypeError(\"Array.from: when provided, the second argument must be a function\");\n        2 < arguments.length && (f = arguments[2]);\n      }\n\n      var a = Number(k.length);\n      a = isNaN(a) ? 0 : 0 !== a && isFinite(a) ? (0 < a ? 1 : -1) * Math.floor(Math.abs(a)) : a;\n      a = Math.min(Math.max(a, 0), m);\n\n      for (var g = h(this) ? Object(new this(a)) : Array(a), b = 0, e; b < a;) e = k[b], g[b] = d ? \"undefined\" === typeof f ? d(e, b) : d.call(f, e, b) : e, b += 1;\n\n      g.length = a;\n      return g;\n    };\n  }());\n  /*!\n  Array.prototype.includes\n  */\n\n  Array.prototype.includes || Object.defineProperty(Array.prototype, \"includes\", {\n    writable: !0,\n    configurable: !0,\n    value: function (r, e) {\n      if (null == this) throw new TypeError('\"this\" is null or not defined');\n      var t = Object(this),\n          n = t.length >>> 0;\n      if (0 === n) return !1;\n      var i,\n          o,\n          a = 0 | e,\n          u = Math.max(0 <= a ? a : n - Math.abs(a), 0);\n\n      for (; u < n;) {\n        if ((i = t[u]) === (o = r) || \"number\" == typeof i && \"number\" == typeof o && isNaN(i) && isNaN(o)) return !0;\n        u++;\n      }\n\n      return !1;\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}