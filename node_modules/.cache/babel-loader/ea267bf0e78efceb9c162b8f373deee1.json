{"ast":null,"code":"import { h } from \"../airship.core.js\";\n\nvar Infowindow = function () {\n  function e() {}\n\n  return e.prototype.render = function () {\n    return !this.element.innerHTML && this.src ? this._renderImageInfoWindow() : this._renderStandarInfowindow();\n  }, e.prototype.componentDidLoad = function () {\n    this.src && this._setupHook();\n  }, e.prototype._renderStandarInfowindow = function () {\n    return h(\"div\", {\n      class: \"as-infowindow\"\n    }, this.src && h(\"img\", {\n      src: this.src\n    }), h(\"div\", {\n      class: \"as-infowindow__content\"\n    }, h(\"slot\", null)), h(\"div\", {\n      class: \"as-infowindow__hook\"\n    }));\n  }, e.prototype._renderImageInfoWindow = function () {\n    return h(\"div\", {\n      class: \"as-infowindow\"\n    }, h(\"div\", {\n      class: \"as-infowindow__media\"\n    }, h(\"img\", {\n      src: this.src\n    })), h(\"div\", {\n      class: \"as-infowindow__imageHook\"\n    }, h(\"div\", {\n      class: \"as-infowindow__imageHook--inner\"\n    }, h(\"img\", {\n      src: this.src\n    }))));\n  }, e.prototype._setupHook = function () {\n    var e = this,\n        n = this.element.querySelector(\".as-infowindow__media img\");\n    n && (n.onload = function () {\n      var o = n.offsetHeight,\n          i = e.element.querySelector(\".as-infowindow__media\"),\n          t = e.element.querySelector(\".as-infowindow__imageHook img\"),\n          r = o - 18;\n      i.style.height = r + \"px\", t.style.marginTop = \"-\" + r + \"px\";\n    });\n  }, Object.defineProperty(e, \"is\", {\n    get: function () {\n      return \"as-infowindow\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e, \"properties\", {\n    get: function () {\n      return {\n        element: {\n          elementRef: !0\n        },\n        src: {\n          type: String,\n          attr: \"src\"\n        }\n      };\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(e, \"style\", {\n    get: function () {\n      return \"as-infowindow{--as--infowindow--color--background:var(--as--color--ui-01,#fff);--as--infowindow--color--shadow:var(--as--color--shadow,rgba(44,44,44,0.16));display:inline-block}as-infowindow .as-infowindow{display:inline-block;position:relative;z-index:3;width:260px;border-radius:4px 4px 4px 0;background:var(--as--infowindow--color--background);-webkit-box-shadow:0 4px 16px 0 var(--as--infowindow--color--shadow);box-shadow:0 4px 16px 0 var(--as--infowindow--color--shadow)}as-infowindow .as-infowindow img{display:block;width:100%;border-top-left-radius:4px;border-top-right-radius:4px}as-infowindow .as-infowindow__media{overflow:hidden;border-radius:4px 4px 4px 0}as-infowindow .as-infowindow__content{height:100%;padding:16px;overflow:auto}as-infowindow .as-infowindow__hook{position:absolute;z-index:10;bottom:1px;left:0;background:var(--as--infowindow--color--background)}as-infowindow .as-infowindow__hook:before{z-index:3;top:0;border-top:12px solid var(--as--infowindow--color--background);border-radius:0 0 0 4px}as-infowindow .as-infowindow__hook:after,as-infowindow .as-infowindow__hook:before{content:\\\"\\\";position:absolute;left:0;width:0;height:0;border-right:18px solid transparent}as-infowindow .as-infowindow__hook:after{z-index:2;top:3px;border-top:12px solid var(--as--infowindow--color--shadow);-webkit-filter:blur(2px);filter:blur(2px)}as-infowindow .as-infowindow__imageHook{position:absolute;z-index:10;bottom:0}as-infowindow .as-infowindow__imageHook:after{content:\\\"\\\";position:absolute;z-index:1;top:3px;left:0;width:0;height:0;border-top:12px solid var(--as--infowindow--color--shadow);border-right:18px solid transparent;-webkit-filter:blur(2px);filter:blur(2px)}as-infowindow .as-infowindow__imageHook--inner{position:absolute;z-index:3;top:-1px;width:18px;height:12px;overflow:hidden;-webkit-clip-path:polygon(0 0,0 100%,100% 0);clip-path:polygon(0 0,0 100%,100% 0)}as-infowindow .as-infowindow__imageHook--inner>img{width:260px}\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), e;\n}();\n\nexport { Infowindow as AsInfowindow };","map":null,"metadata":{},"sourceType":"module"}